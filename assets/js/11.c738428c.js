(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{563:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"执行上下文和执行栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文和执行栈"}},[t._v("#")]),t._v(" 执行上下文和执行栈")]),t._v(" "),a("h2",{attrs:{id:"执行上下文类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文类型"}},[t._v("#")]),t._v(" 执行上下文类型")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("执行上下文是当前 JavaScript 代码被解析和执行时所在环境的抽象概念。")]),t._v(" "),a("p",[a("strong",[t._v("全局执行上下文")]),t._v("：只有一个，浏览器中的全局对象就是 window 对象，"),a("code",[t._v("this")]),t._v(" 指向这个全局对象。")]),t._v(" "),a("p",[a("strong",[t._v("函数执行上下文")]),t._v("：存在无数个，只有在函数被调用的时候才会被创建，每次调用函数都会创建一个新的执行上下文。")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("Eval")]),t._v(" 函数执行上下文")]),t._v("： 指的是运行在 "),a("code",[t._v("eval")]),t._v(" 函数中的代码，很少用而且不建议使用")]),t._v(" "),a("h2",{attrs:{id:"执行栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行栈"}},[t._v("#")]),t._v(" 执行栈")]),t._v(" "),a("p",[t._v("用于存储在代码执行期间创建的所有执行上下文。")]),t._v(" "),a("h4",{attrs:{id:"执行上下文的创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文的创建"}},[t._v("#")]),t._v(" 执行上下文的创建")]),t._v(" "),a("p",[t._v("执行上下文分两个阶段创建："),a("strong",[t._v("1）创建阶段；")]),t._v(" "),a("strong",[t._v("2）执行阶段")])]),t._v(" "),a("h4",{attrs:{id:"创建阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建阶段"}},[t._v("#")]),t._v(" 创建阶段")]),t._v(" "),a("ul",[a("li",[t._v("1、确定 "),a("strong",[t._v("this")]),t._v(" 的值，也被称为 "),a("strong",[t._v("This Binding")]),t._v("。")]),t._v(" "),a("li",[t._v("2、"),a("strong",[a("code",[t._v("LexicalEnvironment（词法环境）")])]),t._v(" 组件被创建。")]),t._v(" "),a("li",[t._v("3、"),a("strong",[a("code",[t._v("VariableEnvironment（变量环境）")])]),t._v(" 组件被创建。")])]),t._v(" "),a("p",[a("strong",[t._v("变量提升")]),t._v("的原因：在创建阶段，函数声明存储在环境中，而变量会被设置为 "),a("code",[t._v("undefined")]),t._v("（在 "),a("code",[t._v("var")]),t._v(" 的情况下）或保持未初始化（在 "),a("code",[t._v("let")]),t._v(" 和 "),a("code",[t._v("const")]),t._v(" 的情况下）。所以这就是为什么可以在声明之前访问 "),a("code",[t._v("var")]),t._v(" 定义的变量（尽管是 "),a("code",[t._v("undefined")]),t._v(" ），但如果在声明之前访问 "),a("code",[t._v("let")]),t._v(" 和 "),a("code",[t._v("const")]),t._v(" 定义的变量就会提示引用错误的原因。这就是所谓的变量提升。")]),t._v(" "),a("h4",{attrs:{id:"执行阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行阶段"}},[t._v("#")]),t._v(" 执行阶段")]),t._v(" "),a("p",[t._v("此阶段，完成对所有变量的分配，最后执行代码。")]),t._v(" "),a("h2",{attrs:{id:"变量提升和函数提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量提升和函数提升"}},[t._v("#")]),t._v(" 变量提升和函数提升")]),t._v(" "),a("p",[t._v("例子一："),a("strong",[t._v("变量提升")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo1，foo赋值")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo2，foo重新赋值")]),t._v("\n")])])]),a("p",[t._v("例子二："),a("strong",[t._v("函数提升")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo2")]),t._v("\n")])])]),a("p",[t._v("例子三：声明优先级，"),a("strong",[t._v("函数 > 变量")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo1，foo重新赋值")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo1")]),t._v("\n")])])]),a("p",[t._v("上面三个例子中，第一个例子是变量提升，第二个例子是函数提升，第三个例子是函数声明优先级高于变量声明。")]),t._v(" "),a("p",[a("strong",[t._v("需要注意")]),t._v("的是同一作用域下存在多个同名函数声明，后面的会替换前面的函数声明。")]),t._v(" "),a("h1",{attrs:{id:"原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),a("p",[t._v("在JS中只有函数对象才有"),a("code",[t._v("prototype")]),t._v("属性。")]),t._v(" "),a("p",[t._v("当我们创建函数时，JS会为这个函数自动添加"),a("code",[t._v("prototype")]),t._v("属性，它的值是一个有"),a("code",[t._v("constructor")]),t._v("属性的对象，而不是空对象。一旦把这个函数当作构造函数去调用(即通过"),a("code",[t._v("new")]),t._v("关键字调用)，那么JS会帮我们创建该构造函数的实例，实例继承构造函数"),a("code",[t._v("prototype")]),t._v("的所有属性和方法。")]),t._v(" "),a("p",[t._v("实例对象的"),a("code",[t._v("__proto__")]),t._v("指向自己构造函数的"),a("code",[t._v("prototype")])]),t._v(" "),a("h1",{attrs:{id:"css盒子水平垂直居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css盒子水平垂直居中"}},[t._v("#")]),t._v(" CSS盒子水平垂直居中")]),t._v(" "),a("p",[t._v("五种")]),t._v(" "),a("h1",{attrs:{id:"清除浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动"}},[t._v("#")]),t._v(" 清除浮动")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix:after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h1",{attrs:{id:"经典布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#经典布局"}},[t._v("#")]),t._v(" 经典布局")]),t._v(" "),a("h2",{attrs:{id:"圣杯布局-左右固定中间自适应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#圣杯布局-左右固定中间自适应"}},[t._v("#")]),t._v(" 圣杯布局：左右固定中间自适应")]),t._v(" "),a("p",[t._v("浮动和负margin")]),t._v(" "),a("p",[t._v("flex")]),t._v(" "),a("p",[t._v("定位")]),t._v(" "),a("h1",{attrs:{id:"移动端响应式布局开发三大方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移动端响应式布局开发三大方案"}},[t._v("#")]),t._v(" 移动端响应式布局开发三大方案")]),t._v(" "),a("p",[t._v("media媒体查询")]),t._v(" "),a("p",[t._v("rem")]),t._v(" "),a("p",[t._v("flex")]),t._v(" "),a("p",[a("code",[t._v("vh")]),t._v("/"),a("code",[t._v("vw")])]),t._v(" "),a("h1",{attrs:{id:"堆栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆栈"}},[t._v("#")]),t._v(" 堆栈")]),t._v(" "),a("p",[t._v("堆：存储引用类型值的空间")]),t._v(" "),a("p",[t._v("栈：存储基本类型值和执行代码的环境")]),t._v(" "),a("h1",{attrs:{id:"tostring-和valueof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostring-和valueof"}},[t._v("#")]),t._v(" "),a("code",[t._v("toString()")]),t._v("和"),a("code",[t._v("valueOf()")])]),t._v(" "),a("p",[a("code",[t._v("toString( )")]),t._v('就是将其他东西用字符串表示，比较特殊的地方就是，表示对象的时候，变成"[object Object]",表示数组的时候，就变成数组内容以逗号连接的字符串，相当于'),a("code",[t._v("Array.join(',')")]),t._v("。 而"),a("code",[t._v("valueOf( )")]),t._v("就返回它自身了。")]),t._v(" "),a("h1",{attrs:{id:"对象-数组-的深浅克隆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象-数组-的深浅克隆"}},[t._v("#")]),t._v(" 对象(数组)的深浅克隆")]),t._v(" "),a("p",[a("code",[t._v("JSON.parse(JSON.stringify(obj))")]),t._v("：弊端：函数、正则、undefined会被忽略不计")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 过滤特殊情况")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不直接创建空对象目的：克隆的结果和之前保持相同的所属类")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h1",{attrs:{id:"内存回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存回收"}},[t._v("#")]),t._v(" 内存回收")]),t._v(" "),a("p",[t._v("js垃圾自动收集机制，垃圾收集器会每隔一段时间就执行一次释放操作，找出不再继续使用的值，然后释放其占用的内存。")]),t._v(" "),a("h2",{attrs:{id:"局部变量和全局变量的销毁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部变量和全局变量的销毁"}},[t._v("#")]),t._v(" 局部变量和全局变量的销毁")]),t._v(" "),a("h3",{attrs:{id:"局部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部变量"}},[t._v("#")]),t._v(" 局部变量")]),t._v(" "),a("p",[t._v("局部作用域中，当函数执行完毕，局部变量就没有存在的必要，因此垃圾收集器很容易判断并回收")]),t._v(" "),a("h3",{attrs:{id:"全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),a("p",[t._v("全局变量什么时候需要自动释放内存空间则很难判断，所以开发中尽量避免使用全局变量")]),t._v(" "),a("h1",{attrs:{id:"内存泄漏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[t._v("#")]),t._v(" 内存泄漏")]),t._v(" "),a("p",[t._v("对于持续运行的服务进程，必须及时释放不再用到的内存。对于不再用到的内存，没有及时释放就叫做内存泄漏。")]),t._v(" "),a("h1",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),a("p",[t._v("简单定义：函数A返回了一个函数B，并且函数B中使用了函数A的变量，函数B就被称作闭包。")]),t._v(" "),a("p",[t._v("定义：闭包是有权访问另外一个函数作用域中的变量的函数。")]),t._v(" "),a("h1",{attrs:{id:"同步异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步异步"}},[t._v("#")]),t._v(" 同步异步")]),t._v(" "),a("p",[t._v("浏览器是多线程的，JS是单线程--\x3e浏览器只给了其一个线程来渲染。")]),t._v(" "),a("p",[t._v("宏任务：定时器、事件绑定、ajax")]),t._v(" "),a("p",[t._v("微任务：promise、async await、process.nextTick")]),t._v(" "),a("h1",{attrs:{id:"箭头函数与普通函数区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数与普通函数区别"}},[t._v("#")]),t._v(" 箭头函数与普通函数区别")]),t._v(" "),a("p",[t._v("箭头函数不能被new，无法new一个箭头函数(没有原型链prototype)。")]),t._v(" "),a("p",[t._v("箭头函数没有自己的this，它的this都继承自其上下文的this。")]),t._v(" "),a("h1",{attrs:{id:"俩个等号-的比较规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#俩个等号-的比较规则"}},[t._v("#")]),t._v(" 俩个等号==的比较规则")]),t._v(" "),a("p",[t._v("对象==字符串，对象.toString()变为字符串")]),t._v(" "),a("p",[t._v("null==undefined相等，但是和其他值比较就不相等")]),t._v(" "),a("p",[t._v("NaN==NaN不相等")]),t._v(" "),a("p",[t._v("剩下的都是转换为数字")]),t._v(" "),a("h1",{attrs:{id:"防抖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防抖"}},[t._v("#")]),t._v(" 防抖")]),t._v(" "),a("p",[t._v("触发事件后n秒内函数只能执行一次，如果在n秒内又触发了事件，则会重新计算函数执行时间")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delay"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n        timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h1",{attrs:{id:"节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节流"}},[t._v("#")]),t._v(" 节流")]),t._v(" "),a("p",[t._v("连续触发事件但是在n秒内只执行一次函数，也就是稀释函数的执行频率")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delay"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n        flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h1",{attrs:{id:"手写ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写ajax"}},[t._v("#")]),t._v(" 手写ajax")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ajax "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Contnet-type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/x-www-form-urlencoded'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h1",{attrs:{id:"mvc和mvvm的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvc和mvvm的区别"}},[t._v("#")]),t._v(" MVC和MVVM的区别")]),t._v(" "),a("h2",{attrs:{id:"mvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[t._v("#")]),t._v(" MVC")]),t._v(" "),a("p",[t._v("model模型：负责从数据库中获取数据")]),t._v(" "),a("p",[t._v("view视图：负责展示数据的地方")]),t._v(" "),a("p",[t._v("controller控制器：用户交互的地方如点击事件")]),t._v(" "),a("p",[t._v("思想：controller将model的数据展示在view上")]),t._v(" "),a("h2",{attrs:{id:"mvvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),a("p",[t._v("view-model：做了两件事达到数据的双向绑定。")]),t._v(" "),a("p",[t._v("1.将model模型转化为view视图，即通过数据绑定将后端传递的数据转化成所看到的页面。")]),t._v(" "),a("p",[t._v("2.将view视图转化为model模型，即通过dom事件监听将看到的页面转化为后端的数据。")]),t._v(" "),a("p",[t._v("思想：实现了view和model的自动同步，当model的属性改变时，我们不用再自己手动操作dom元素来改变view的显示，而是改变属性后该属性对应view层会自动改变。")]),t._v(" "),a("h1",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" "),a("code",[t._v("Vue")])]),t._v(" "),a("h2",{attrs:{id:"双向数据绑定的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双向数据绑定的实现原理"}},[t._v("#")]),t._v(" 双向数据绑定的实现原理")]),t._v(" "),a("p",[t._v("2.0： ES5 "),a("code",[t._v("Object.defineProperty")]),t._v("数据劫持+观察者模式")]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("p",[t._v("1.对原始数据克隆")]),t._v(" "),a("p",[t._v("2.需要分别给对象中的每一个属性设置监听")]),t._v(" "),a("h2",{attrs:{id:"常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[t._v("#")]),t._v(" 常用指令")]),t._v(" "),a("p",[a("code",[t._v("v-show")]),t._v("：根据表达式真假值，切换元素的display CSS property。")]),t._v(" "),a("p",[a("code",[t._v("v-if")]),t._v("：根据表达式的值有条件的渲染元素。切换元素时元素的数据绑定/组件被销毁并重建。")]),t._v(" "),a("p",[a("code",[t._v("v-html")]),t._v("：更新元素的innerHTML")]),t._v(" "),a("p",[a("code",[t._v("v-text")]),t._v("：更新元素的textContent")]),t._v(" "),a("p",[a("code",[t._v("v-for")]),t._v("：列表循环渲染，数组、对象、数字、字符串都可以")]),t._v(" "),a("p",[a("code",[t._v("v-on")]),t._v("：绑定事件")]),t._v(" "),a("p",[a("code",[t._v("v-bind")]),t._v("：动态绑定各种变量")]),t._v(" "),a("p",[a("code",[t._v("v-model")]),t._v("：双向绑定表单项的值")]),t._v(" "),a("p",[a("code",[t._v("v-once")]),t._v("：元素和组件只渲染一次")]),t._v(" "),a("p",[a("code",[t._v("v-slot")]),t._v("：插槽名")]),t._v(" "),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("p",[a("code",[t._v(".trim")]),t._v(":把v-model绑定的值的首位空格给过滤掉")]),t._v(" "),a("p",[a("code",[t._v(".stop")]),t._v(":阻止冒泡")]),t._v(" "),a("p",[a("code",[t._v(".self")]),t._v("：只有点击事件绑定的本身才会触发事件")]),t._v(" "),a("p",[a("code",[t._v(".number")]),t._v("：将值转成数字，但是先输入数字只取前面数字部分，先输入字母的话该修饰符无效")]),t._v(" "),a("p",[a("code",[t._v(".lazy")]),t._v("：改变输入框的值时value不会改变，当光标离开输入框时，v-model绑定的value才会改变")]),t._v(" "),a("p",[a("code",[t._v(".once")]),t._v("：事件只执行一次")]),t._v(" "),a("p",[a("code",[t._v(".capture")]),t._v(":事件默认由里往外冒泡，capture修饰符的作用是反过来的由外往里捕获")]),t._v(" "),a("p",[a("code",[t._v(".prevent")]),t._v("：阻止默认事件(如a标签的跳转)")]),t._v(" "),a("p",[a("code",[t._v(".native")]),t._v("：加载自定义组件的事情上保证事件能执行")]),t._v(" "),a("p",[t._v(".camel：确保绑定参数被识别为驼峰写法")]),t._v(" "),a("p",[a("code",[t._v(".sync")]),t._v("：父子组件传值，子组件想更新这个值，使用该修饰符可简写")]),t._v(" "),a("h2",{attrs:{id:"nexttick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nexttick"}},[t._v("#")]),t._v(" "),a("code",[t._v("nextTick")])]),t._v(" "),a("p",[t._v("vue采取的是异步更新Dom策略，所以数据一更新，视图却还没更新，拿到的还是上一次的旧视图数据。")]),t._v(" "),a("p",[t._v("nextTick里面的代码会在dom更新后执行")]),t._v(" "),a("h2",{attrs:{id:"动态class和style"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态class和style"}},[t._v("#")]),t._v(" 动态class和style")]),t._v(" "),a("p",[t._v("动态class对象："),a("code",[t._v("<div :class=\"{ 'is-active': true, 'red': isRed }\"></div>")])]),t._v(" "),a("p",[t._v("动态class数组："),a("code",[t._v("<div :class=\"['is-active', isRed ? 'red' : '' ]\"></div>")])]),t._v(" "),a("p",[t._v("动态style对象："),a("code",[t._v("<div :style=\"{ color: textColor, fontSize: '18px' }\"></div>")])]),t._v(" "),a("p",[t._v("动态style数组："),a("code",[t._v("<div :style=\"[{ color: textColor, fontSize: '18px' }, { fontWeight: '300' }]\"></div>")])]),t._v(" "),a("h2",{attrs:{id:"computed和watch区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed和watch区别"}},[t._v("#")]),t._v(" computed和watch区别")]),t._v(" "),a("p",[t._v("1.computed是依赖已有的变量来计算一个目标变量，大多数情况都是"),a("strong",[t._v("多个变量")]),t._v("凑在一起计算出"),a("strong",[t._v("一个变量")]),t._v("，并且computed具有缓存机制，依赖值不变的情况下其会直接读取缓存进行复用，computed不能进行异步操作")]),t._v(" "),a("p",[t._v("2.watch是监听某一个变量的变化，并执行相应的回调函数，通常是"),a("strong",[t._v("一个变量")]),t._v("的变化决定"),a("strong",[t._v("多个变量")]),t._v("，watch可以进行异步操作")]),t._v(" "),a("p",[t._v("简单来说就是一般情况下computed是多对一，watch是一对多")]),t._v(" "),a("h1",{attrs:{id:"跨域问题的解决方案和实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域问题的解决方案和实现原理"}},[t._v("#")]),t._v(" 跨域问题的解决方案和实现原理")]),t._v(" "),a("h1",{attrs:{id:"数组去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[t._v("#")]),t._v(" 数组去重")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Array.from(new Set(arr))")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set和Map类似，也是一组key的集合，但是不存储value，由于key不能重复，所以Set里没有重复的key")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\n")])])]),a("p",[t._v("会改变数组的方法：push、pop、shift、unshift、splice、reverse、sort")]),t._v(" "),a("p",[t._v("不会改变数组的方法：filter、map、slice、concat")]),t._v(" "),a("h1",{attrs:{id:"回流reflow和重绘repaint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流reflow和重绘repaint"}},[t._v("#")]),t._v(" 回流reflow和重绘repaint")]),t._v(" "),a("p",[t._v("回流必将引起重绘，重绘不一定引起回流。回流比重绘的代价要更高。")]),t._v(" "),a("p",[a("strong",[t._v("回流")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("当render tree中部分或全部元素的尺寸、结构或某些属性发生改变时，浏览器重新渲染部分或全部文档的过程成为回流。")])]),t._v(" "),a("li",[a("p",[t._v("导致回流的操作：")]),t._v(" "),a("p",[t._v("页面首次渲染、浏览器窗口大小发生改变、元素尺寸或位置发生改变、元素内容变化、元素字体大小变化、添加或删除可见的"),a("code",[t._v("dom")]),t._v("元素、激活"),a("code",[t._v("css")]),t._v("伪类、查询某些属性或调用某些方法")])]),t._v(" "),a("li",[a("p",[t._v("一些常用且会导致回流的属性和方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("clientWidth")]),t._v("、"),a("code",[t._v("clientHeight")]),t._v("、"),a("code",[t._v("clientTop")]),t._v("、"),a("code",[t._v("clientLeft")])]),t._v(" "),a("li",[a("code",[t._v("offsetWidth")]),t._v("、"),a("code",[t._v("offsetHeight")]),t._v("、"),a("code",[t._v("offsetTop")]),t._v("、"),a("code",[t._v("offsetLeft")])]),t._v(" "),a("li",[a("code",[t._v("scrolWidth")]),t._v("、、、")]),t._v(" "),a("li",[a("code",[t._v("scrollIntoView()")]),t._v("、"),a("code",[t._v("scrollIntoViewIfNeeded()")])]),t._v(" "),a("li",[a("code",[t._v("getComputedStyle()")])]),t._v(" "),a("li",[a("code",[t._v("getBoundingClientRect()")])]),t._v(" "),a("li",[a("code",[t._v("scrollTo()")])])])])]),t._v(" "),a("p",[a("strong",[t._v("重绘")])]),t._v(" "),a("ol",[a("li",[t._v("当页面中元素样式的改变并不影响它在文档流中的位置时(如"),a("code",[t._v("color")]),t._v("、"),a("code",[t._v("background-color")]),t._v("、"),a("code",[t._v("visibility")]),t._v(")，浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。")])]),t._v(" "),a("h1",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),a("p",[a("code",[t._v("clientWidth")]),t._v(" = 宽度 + padding")]),t._v(" "),a("p",[a("code",[t._v("offsetWidth")]),t._v(" = 宽度 + padding + border")]),t._v(" "),a("p",[t._v("web表单登录图形验证实现：服务器端生成验证码后一方面通过图片将验证码返回给客户端,同时在服务器端保存文本的验证码,由服务器端验证输入内容是否正确，客户端出于安全考虑不能直接在客户端进行验证")]),t._v(" "),a("p",[t._v("web程序对象作用域：请求作用域、会话作用域、应用上下文")]),t._v(" "),a("p",[a("code",[t._v("main")]),t._v(" 标签规定文档的主要内容； "),a("code",[t._v("dir")]),t._v(" 定义目录列表； "),a("code",[t._v("dd")]),t._v(" 为定义列表中项目的描述； "),a("code",[t._v("pre")]),t._v(" 可定义预格式化的文本。")]),t._v(" "),a("p",[a("code",[t._v("input")]),t._v("元素的类型："),a("code",[t._v("button")]),t._v("、"),a("code",[t._v("checkbox")]),t._v("、"),a("code",[t._v("file")]),t._v("、"),a("code",[t._v("hidden")]),t._v("、"),a("code",[t._v("image")]),t._v("、"),a("code",[t._v("password")]),t._v("、"),a("code",[t._v("radio")]),t._v("、"),a("code",[t._v("reset")]),t._v("、"),a("code",[t._v("submit")]),t._v("、"),a("code",[t._v("text")])]),t._v(" "),a("p",[a("code",[t._v("video")]),t._v("标签定义视频、"),a("code",[t._v("source")]),t._v("标签定义媒体资源、"),a("code",[t._v("track")]),t._v("标签为音视频规定外部文本轨道，不存在slider标签但是有个类似的"),a("code",[t._v("aside")]),t._v("标签")]),t._v(" "),a("p",[t._v("html5的跨文档消息传输：可以实现同域内的web页面间的相互通信，可以相互传递字符串和对象，使用该功能需要获取到网页所在窗口对象的实例，跨文档已经是跨域的一种")]),t._v(" "),a("p",[a("code",[t._v("hr")]),t._v("分割线，"),a("code",[t._v("br")]),t._v("换行符")]),t._v(" "),a("p",[t._v("带有id属性的"),a("code",[t._v("dom")]),t._v("元素的副作用：1.增加内存负担，2.会创建同名的全局变量")]),t._v(" "),a("p",[a("code",[t._v("inline")]),t._v("元素只能嵌套"),a("code",[t._v("inline")]),t._v("元素。")]),t._v(" "),a("p",[t._v("一个页面不可以存在多个"),a("code",[t._v("title")]),t._v("元素。"),a("code",[t._v("main")]),t._v("元素只允许存在一个。")]),t._v(" "),a("p",[a("code",[t._v("h5")]),t._v("不再支持"),a("code",[t._v("center")]),t._v("、"),a("code",[t._v("font")]),t._v("、"),a("code",[t._v("strike")]),t._v("、"),a("code",[t._v("basefont")]),t._v("、"),a("code",[t._v("big")]),t._v("、"),a("code",[t._v("frame")]),t._v("、"),a("code",[t._v("arconym")]),t._v("这些元素")]),t._v(" "),a("p",[a("code",[t._v("h5")]),t._v("中"),a("code",[t._v("getCurrentPosition()")]),t._v("用于获取用户当前位置")]),t._v(" "),a("p",[a("code",[t._v("Domtree")]),t._v("的根节点是document")]),t._v(" "),a("p",[t._v("a元素可以包含任何其他元素(除了自身)")]),t._v(" "),a("p",[a("code",[t._v("p")]),t._v("元素不能包含任何块级元素（包括自身）")]),t._v(" "),a("p",[a("code",[t._v("a")]),t._v("标签没有设置"),a("code",[t._v("href")]),t._v("属性时是不能获取到焦点的")]),t._v(" "),a("p",[a("code",[t._v("label")]),t._v("标签只有俩个属性"),a("code",[t._v("for")]),t._v("和"),a("code",[t._v("form")]),t._v("："),a("code",[t._v("for")]),t._v("规定"),a("code",[t._v("label")]),t._v("绑定到哪个表单元素，"),a("code",[t._v("form")]),t._v("规定"),a("code",[t._v("label")]),t._v("字段所属的一个或多个表单")]),t._v(" "),a("p",[a("code",[t._v("<!DOCTYPE>")]),t._v("标签没有结束标签，声明不区分大小写。")]),t._v(" "),a("p",[a("code",[t._v("<!DOCTYPE>")]),t._v("声明不是一个HTML标签，它是用来告知web浏览器页面使用了哪种html版本")]),t._v(" "),a("p",[a("code",[t._v("DOM")]),t._v("树中有如下节点格式："),a("code",[t._v("Element类型")]),t._v("元素节点，"),a("code",[t._v("Text类型")]),t._v("文本节点，"),a("code",[t._v("Comment类型")]),t._v("注释节点，"),a("code",[t._v("Document类型")]),t._v("document节点")]),t._v(" "),a("p",[t._v("表格标记常用属性：")]),t._v(" "),a("p",[t._v("1."),a("code",[t._v("cellpadding")]),t._v("：单元格边沿与其内容之间的空白")]),t._v(" "),a("p",[t._v("2."),a("code",[t._v("cellspacing")]),t._v("：单元格之间的间距空白")]),t._v(" "),a("p",[t._v("3."),a("code",[t._v("border")]),t._v("：表格边框的宽度（边框粗细度）")]),t._v(" "),a("p",[t._v("4."),a("code",[t._v("align")]),t._v("：表格中文字内容对齐方式")]),t._v(" "),a("p",[t._v("5."),a("code",[t._v("frame")]),t._v("：外侧边框哪些部分可见")]),t._v(" "),a("p",[t._v("6."),a("code",[t._v("rules")]),t._v("：内侧边框哪些部分可见")]),t._v(" "),a("p",[a("code",[t._v("<i>和<em>")]),t._v("都表示斜体。前者单纯表示斜体，后踢表示强调")]),t._v(" "),a("h2",{attrs:{id:"h5常用新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h5常用新特性"}},[t._v("#")]),t._v(" "),a("code",[t._v("h5")]),t._v("常用新特性：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("canvas")]),t._v("元素：用于定义图形，只是图形容器，必须使用脚本来绘制图形")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("audio")]),t._v("：用于音频播放")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("video")]),t._v("：用于视频播放")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("article")]),t._v("：规定独立的自包含内容")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("header")]),t._v("：定义文档的页眉，介绍相关信息")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("section")]),t._v("：定义文档中的节")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("footer")]),t._v("：定义文档的页脚")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("nav")]),t._v("：定义导航链接")])])]),t._v(" "),a("p",[a("code",[t._v("SVG")]),t._v("：可伸缩矢量图形；用来定义用于网络的基于矢量的图形；使用"),a("code",[t._v("XML")]),t._v("格式定义图形；图像在放大或改变尺寸的情况下其图形质量不会有所损失；是万维网联盟的标准；是HTML下的一个分支；与诸如DOM和XSL之类的W3C标准是一个整体")]),t._v(" "),a("p",[a("code",[t._v("form")]),t._v("表单中"),a("code",[t._v("input")]),t._v("元素的"),a("code",[t._v("readonly")]),t._v("和"),a("code",[t._v("disabled")]),t._v("属性："),a("code",[t._v("disabled")]),t._v("指当"),a("code",[t._v("input")]),t._v("元素加载时禁用此元素，"),a("code",[t._v("input")]),t._v("内容不会随着表单提交。"),a("code",[t._v("readonly")]),t._v("规定输入字段为只读，内容会随着表单提交。无论是"),a("code",[t._v("readonly")]),t._v("还是"),a("code",[t._v("disabled")]),t._v("，都能通过js更改"),a("code",[t._v("input")]),t._v("的值")]),t._v(" "),a("p",[a("code",[t._v("head")]),t._v("标签可以包含：1."),a("code",[t._v("title")]),t._v("定义不同文档标题，2."),a("code",[t._v("base")]),t._v("定义所有链接的URL，3."),a("code",[t._v("link")]),t._v("定义文档与外部资源之间的关系，4."),a("code",[t._v("style")]),t._v("定义文档的样式文件引用地址，也可直接添加样式渲染，5."),a("code",[t._v("meta")]),t._v("描述一些基本的元数据，6."),a("code",[t._v("script")]),t._v("用于加载脚本文件")]),t._v(" "),a("h1",{attrs:{id:"浏览器渲染流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染流程"}},[t._v("#")]),t._v(" 浏览器渲染流程")]),t._v(" "),a("ol",[a("li",[t._v("解析HTML并构建DOM树")]),t._v(" "),a("li",[t._v("解析CSS，生成CSS规则树")]),t._v(" "),a("li",[t._v("合并DOM树和CSS规则，构建render树")]),t._v(" "),a("li",[t._v("布局render树，负责各元素尺寸、位置计算")]),t._v(" "),a("li",[t._v("绘制render树，绘制页面像素信息")])]),t._v(" "),a("h1",{attrs:{id:"slice、splice和split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice、splice和split"}},[t._v("#")]),t._v(" slice、splice和split")]),t._v(" "),a("h2",{attrs:{id:"slice-截取功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice-截取功能"}},[t._v("#")]),t._v(" slice：截取功能")]),t._v(" "),a("p",[t._v("从数组中截取任意元素，返回结果为新数组，不会改变原数组")]),t._v(" "),a("p",[t._v("新数组 = 原数组.slice(开始位置的索引，结束位置的索引)")]),t._v(" "),a("p",[t._v("注意：包含开始索引，不包含结束索引=>[a,b)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无参数时，截取所有的元素。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['c','d','e','f']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取最后两个元素 负数会将其与长度相加，-2+6=4 ['e','f']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取从第二个到第四个之间的元素（不包括第四个元素）['c','d']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// []")]),t._v("\n")])])]),a("h2",{attrs:{id:"splice-数组增删查改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice-数组增删查改"}},[t._v("#")]),t._v(" splice：数组增删查改")]),t._v(" "),a("p",[t._v("从数组中"),a("strong",[t._v("删除")]),t._v("任意个（可以是负的即增加）元素，返回结果为"),a("strong",[t._v("被删除元素组成的新数组")])]),t._v(" "),a("p",[t._v("该方法会改变原数组，会将指定元素从原数组中删除")]),t._v(" "),a("p",[t._v("新数组 = 原数组.splice(起始索引，需要删除的个数)")]),t._v(" "),a("p",[t._v("新数组 = 原数组.splice(起始索引，需要删除的个数，新元素1，新元素2)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除后--\x3e a1:['b','c','d','e','f']  arr:['a']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除后--\x3e a2:['e','f']  arr:['a','b','c','d']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从index为1的位置开始删除元素，一共删除3个元素--\x3ea3:['b','c','d']  arr:['a','e','f']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//纯增加情况 a4:[],arr:['a','g','h','b', 'c', 'd', 'e', 'f']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a5:['b','c','d'] arr:['a','js','vue','e','f']")]),t._v("\n")])])]),a("h2",{attrs:{id:"split-字符串-数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split-字符串-数组"}},[t._v("#")]),t._v(" split：字符串=>数组")]),t._v(" "),a("p",[t._v("split()是字符串的方法，不是数组的方法")]),t._v(" "),a("p",[a("code",[t._v("新的数组 = str.split(分隔符)")])]),t._v(" "),a("p",[t._v("通过"),a("strong",[t._v("指定的分隔符")]),t._v("将一个字符串拆分成一个数组，不会改变原字符串")]),t._v(" "),a("h1",{attrs:{id:"object-assign"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-assign"}},[t._v("#")]),t._v(" "),a("code",[t._v("Object.assign()")])]),t._v(" "),a("p",[a("code",[t._v("Object.assign()")]),t._v("方法用于将所有可枚举属性的值，从一个或多个源对象"),a("code",[t._v("source")]),t._v("复制到目标对象，然后它将返回目标对象"),a("code",[t._v("target")]),t._v("。"),a("code",[t._v("Object.assign()")]),t._v("是浅拷贝")]),t._v(" "),a("p",[t._v("第一个参数是目标对象"),a("code",[t._v("target")]),t._v("，后面的参数都是源对象")]),t._v(" "),a("p",[t._v("如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" returnedTarget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntarget "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { a: 1, b: 4, c: 5 }")]),t._v("\nreturnedTarget "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { a: 1, b: 4, c: 5 }")]),t._v("\ntarget"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("returnedTarget "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n")])])]),a("p",[t._v("如果参数不是对象，则会先转成对象再返回。"),a("code",[t._v("undefined")]),t._v("和"),a("code",[t._v("null")]),t._v("无法转成对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错 参数undefined也是报错")]),t._v("\n")])])]),a("p",[t._v("如果非对象参数出现在源对象位置(非首参数)，这些参数都会转为对象，如果无法转为对象就会跳过。")]),t._v(" "),a("p",[t._v("其他类型如("),a("code",[t._v("number")]),t._v("、"),a("code",[t._v("string")]),t._v("、"),a("code",[t._v("boolean")]),t._v(")不在首参数也不会报错，但是除了字符串会以数组形式拷贝入目标对象，其他值都不会产生效果。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// { "0": "a", "1": "b", "2": "c" }')]),t._v("\n\n")])])]),a("p",[t._v("可以用来处理数组，但是会把数组视为对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [4,5,3]")]),t._v("\n")])])]),a("h1",{attrs:{id:"http状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http状态码"}},[t._v("#")]),t._v(" HTTP状态码")]),t._v(" "),a("h1",{attrs:{id:"缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),a("p",[t._v("什么是缓存？")]),t._v(" "),a("p",[t._v("通俗一点，第一次访问网站时会把图片和数据下载到本地上，当再次访问该网站时就直接加载出来")]),t._v(" "),a("p",[t._v("缓解服务器压力，减少请求次数")]),t._v(" "),a("p",[t._v("提升性能，加载更快")]),t._v(" "),a("p",[t._v("减少带宽消耗")]),t._v(" "),a("h2",{attrs:{id:"强缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),a("p",[t._v("当访问URL时，不会向服务器发送请求，而是直接从缓存中读取资源，但是会返回200状态码")]),t._v(" "),a("h2",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("p",[t._v("协商缓存就是强缓存失效后，浏览器携带缓存标识向服务器发送请求，由服务器根据缓存标识来决定是否使用缓存的过程")]),t._v(" "),a("h1",{attrs:{id:"vue双向数据绑定原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue双向数据绑定原理"}},[t._v("#")]),t._v(" vue双向数据绑定原理")]),t._v(" "),a("p",[t._v("通过"),a("strong",[t._v("数据劫持结合发布者-订阅模式")]),t._v("的方式实现。通过"),a("code",[t._v("ES5")]),t._v("提供的"),a("code",[t._v("Object.definePropperty()")]),t._v("方法来劫持各属性的"),a("code",[t._v("getter")]),t._v("、"),a("code",[t._v("setter")]),t._v("，并在当监听的属性发生变动时通知订阅者，是否需要更新，若更新就会执行对应的更新函数。")]),t._v(" "),a("h1",{attrs:{id:"v-model语法糖怎么实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model语法糖怎么实现"}},[t._v("#")]),t._v(" v-model语法糖怎么实现")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n相当于\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("input")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something = $event.target.value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("就是v-bind数据绑定与v-on处理函数绑定的语法糖")]),t._v(" "),a("p",[t._v("接受一个"),a("code",[t._v("value")]),t._v("属性，在有新的value时触发"),a("code",[t._v("input")]),t._v("事件")]),t._v(" "),a("h1",{attrs:{id:"hash和history有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash和history有什么区别"}},[t._v("#")]),t._v(" hash和history有什么区别")]),t._v(" "),a("h2",{attrs:{id:"hash模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[t._v("#")]),t._v(" hash模式")]),t._v(" "),a("p",[t._v("hash模式是一种把前端路由的路径用井号"),a("code",[t._v("#")]),t._v("拼接在真实"),a("code",[t._v("url")]),t._v("后面的模式。当井号后面的路径发生变化时，浏览器并不会重新发起请求，而是触发"),a("code",[t._v("onhashchange")]),t._v("事件")]),t._v(" "),a("p",[t._v("特点：")]),t._v(" "),a("ul",[a("li",[t._v("hash变化会触发网页跳转，即浏览器的前进和后退")]),t._v(" "),a("li",[t._v("hash可以改变URL，页面不会重新加载，即不会刷新页面。也就是说页面的跳转都是在客户端进行操作的，因此不算是一次http请求，所以该模式不利于SEO优化")]),t._v(" "),a("li",[t._v("通过"),a("code",[t._v("window.onhashchange")]),t._v("方式监听hash的改变，借此实现无刷新跳转页面")]),t._v(" "),a("li",[t._v("只需要前端配置路由表，不需要后端参与")])]),t._v(" "),a("h2",{attrs:{id:"history模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[t._v("#")]),t._v(" history模式")]),t._v(" "),a("p",[a("code",[t._v("historyAPI")]),t._v("是"),a("code",[t._v("H5")]),t._v("提供的新特性，允许开发者"),a("strong",[t._v("直接更改前端路由")]),t._v("，即更新浏览器URL地址而"),a("strong",[t._v("不重新发起请求")]),t._v("。")]),t._v(" "),a("p",[t._v("特点：")]),t._v(" "),a("h2",{attrs:{id:"二者选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二者选择"}},[t._v("#")]),t._v(" 二者选择")]),t._v(" "),a("p",[a("code",[t._v("to B")]),t._v("的系统推荐hash，相对简单且容易使用，因为hash对url规范不敏感")]),t._v(" "),a("p",[a("code",[t._v("to C")]),t._v("的系统，考虑"),a("code",[t._v("H5 history")]),t._v("，但是需要服务端支持")]),t._v(" "),a("h1",{attrs:{id:"set和map的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set和map的区别"}},[t._v("#")]),t._v(" Set和Map的区别")]),t._v(" "),a("p",[a("code",[t._v("Map")]),t._v("是一组键值对的结构，一个key只能对应一个value")]),t._v(" "),a("p",[a("code",[t._v("Set")]),t._v("是一组key的集合，但不存储value。由于key不能重复所以"),a("code",[t._v("Set")]),t._v("中没有重复的key。")]),t._v(" "),a("p",[t._v("创建一个Set需要提供一个数组作为输入或直接创建一个空的Set，重复的元素在Set中自动被过滤")]),t._v(" "),a("h1",{attrs:{id:"http协议特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议特点"}},[t._v("#")]),t._v(" http协议特点")]),t._v(" "),a("p",[t._v("HTTP 是一个属于应用层的面向对象的协议，HTTP 协议一共有五大特点：")]),t._v(" "),a("ol",[a("li",[t._v("支持客户/服务器模式")]),t._v(" "),a("li",[t._v("简单快速:客户向服务器请求服务时，只需传送请求方法和路径")]),t._v(" "),a("li",[t._v("灵活:HTTP允许传输任意类型的数据对象")]),t._v(" "),a("li",[a("strong",[t._v("无连接")]),t._v(":无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。")]),t._v(" "),a("li",[a("strong",[t._v("无状态")]),t._v(":HTTP协议无法根据之前的状态进行本次的请求处理")])]),t._v(" "),a("h1",{attrs:{id:"localstorage和sessionstorage和cookie和session和token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localstorage和sessionstorage和cookie和session和token"}},[t._v("#")]),t._v(" localstorage和sessionstorage和cookie和session和token")]),t._v(" "),a("p",[t._v("http协议是一种无状态协议，每次服务端收到客户端的请求时，都是一次全新的请求，服务器并不知道客户端的历史请求记录，session和cookie就是为了弥补http的无状态特性。")]),t._v(" "),a("h2",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" cookie")]),t._v(" "),a("p",[t._v("浏览器发起http请求，服务器进行cookie设置"),a("code",[t._v("Set-Cookie")]),t._v("，cookie里面有名和值俩个属性，服务器会把其内容填充完整然后发给浏览器，浏览器将这个cookie保存起来。")]),t._v(" "),a("p",[t._v("这样后浏览器以后发送的每一个请求都会自动附上这个cookie，说白了cookie就是一种存储在浏览器的数据而已。")]),t._v(" "),a("p",[t._v("大小限制在4kb")]),t._v(" "),a("p",[t._v("一般服务器生成，可设置失效时间，如果在浏览器端生成cookie默认关闭浏览器后失效")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/5/17147e399d7970b6~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[t._v("#")]),t._v(" session")]),t._v(" "),a("p",[t._v("session是基于cookie实现的，客户端发起请求，服务端为此次请求开辟一块内存空间，也就是session对象，同时生成一个sessionID和会话结束时间，会被存储到客户端的cookie中，再把会话结束时间对应设置为这个cookie的有效期")]),t._v(" "),a("p",[t._v("Session 机制有个缺点，比如 A 服务器存储了 Session，就是做了负载均衡后，假如一段时间内 A 的访问量激增，会转发到 B 进行访问，但是 B 服务器并没有存储 A 的 Session，会导致 Session 的失效。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://imgtu.com/i/bxBzk9",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://s1.ax1x.com/2022/03/15/bxBzk9.png",alt:"bxBzk9.png"}}),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"cookie和session的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie和session的区别"}},[t._v("#")]),t._v(" cookie和session的区别")]),t._v(" "),a("ul",[a("li",[t._v("安全性：session比cookie安全，前者存储在服务端，后者存储在客户端")]),t._v(" "),a("li",[t._v("存取值的类型不同：cookie只支持字符串数据，要设置成其他类型数据需要转为字符串，而session可以存任意类型数据")]),t._v(" "),a("li",[t._v("有效期不同：cookie可设置为长时间保存，session一般客户端关闭就失效")]),t._v(" "),a("li",[t._v("存储大小不同")])]),t._v(" "),a("h2",{attrs:{id:"token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[t._v("#")]),t._v(" token")]),t._v(" "),a("p",[t._v("访问资源接口API时需要的资源凭证")]),t._v(" "),a("ol",[a("li",[t._v("客户端使用用户名跟密码请求登录")]),t._v(" "),a("li",[t._v("服务端收到请求，去验证用户名与密码")]),t._v(" "),a("li",[t._v("验证成功后，服务端会签发一个 token 并把这个 token 发送给客户端")]),t._v(" "),a("li",[t._v("客户端收到 token 以后，会把它存储起来，比如放在 cookie 里或者 localStorage 里")]),t._v(" "),a("li",[t._v("客户端每次向服务端请求资源的时候需要带着服务端签发的 token")]),t._v(" "),a("li",[t._v("服务端收到请求，然后去验证客户端请求里面带着的 token ，如果验证成功，就向客户端返回请求的数据")])]),t._v(" "),a("p",[t._v("每次请求都要携带token，把token放到http的header里")]),t._v(" "),a("p",[t._v("基于token的用户认证是一种服务端的无状态认证方式，服务端不用存放token数据")]),t._v(" "),a("p",[t._v("token完全由应用管理，所以可以避开同源策略")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/29/16f523a04d9c745f~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"token和session的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#token和session的区别"}},[t._v("#")]),t._v(" token和session的区别")]),t._v(" "),a("p",[t._v("session是"),a("strong",[t._v("记录服务器和客户端会话状态的机制，使服务端有状态化，可以记录会话信息")]),t._v("。")]),t._v(" "),a("p",[t._v("token是"),a("strong",[t._v("令牌")]),t._v("，"),a("strong",[t._v("访问资源接口（API）时所需要的资源凭证")]),t._v("。Token "),a("strong",[t._v("使服务端无状态化，不会存储会话信息。")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("session是诞生并保存在服务器那边的")]),t._v(" "),a("p",[t._v("cookie是一种数据载体，会把session放入cookie中送到客户端那边，cookie跟随http每个请求发送出去")]),t._v(" "),a("p",[t._v("token是诞生在服务器但保存在浏览器这边，由客户端主导，可放在cookie或storage里面，持有token就像持有令牌一样可以允许访问服务器")]),t._v(" "),a("h2",{attrs:{id:"localstorage和sessionstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localstorage和sessionstorage"}},[t._v("#")]),t._v(" localStorage和sessionStorage")]),t._v(" "),a("p",[t._v("共同点：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("存储大小均为5M左右")])]),t._v(" "),a("li",[a("p",[t._v("都有同源策略限制")])]),t._v(" "),a("li",[a("p",[t._v("仅保存在客户端，不参与服务器通信")])])]),t._v(" "),a("p",[t._v("不同点：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("生命周期：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("localstorage存储的数据是永久的，除非人为删除否则会一直存在")])]),t._v(" "),a("li",[a("p",[t._v("sessionstorage与存储数据的脚本所在标签页的有效期是相同的，一旦窗口或标签页被关闭，存储的数据也会被删除")])])])]),t._v(" "),a("li",[a("p",[t._v("作用域：")]),t._v(" "),a("ul",[a("li",[t._v("localstorage：在同一个浏览器内，"),a("strong",[t._v("同源文档")]),t._v("间共享localstorage数据，可相互读取覆盖")]),t._v(" "),a("li",[t._v("sessionstorage：一样需要同浏览器同源文档条件，不仅如此，其作用域还被限定在窗口中，只有同一浏览器、同一窗口的同源文档才能共享数据。比如：浏览器中打开了俩个相同地址页面A和B，虽然页面源完全相同，但还是不能共享数据，因为不同窗口。")])])])]),t._v(" "),a("h1",{attrs:{id:"vuex有哪些基本属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex有哪些基本属性"}},[t._v("#")]),t._v(" vuex有哪些基本属性")]),t._v(" "),a("ol",[a("li",[t._v("state =》基本数据")]),t._v(" "),a("li",[t._v("getters =》从基本数据派生出的数据")]),t._v(" "),a("li",[t._v("mutations =》修改数据，同步")]),t._v(" "),a("li",[t._v("actions =》修改数据，异步(Action提交的是mutation而不是直接变更状态)")]),t._v(" "),a("li",[t._v("modules =》模块化Vuex")])]),t._v(" "),a("h1",{attrs:{id:"在地址栏输入一个地址回车会发生什么事情"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在地址栏输入一个地址回车会发生什么事情"}},[t._v("#")]),t._v(" 在地址栏输入一个地址回车会发生什么事情")]),t._v(" "),a("ol",[a("li",[t._v("URL解析")]),t._v(" "),a("li",[t._v("DNS查询")]),t._v(" "),a("li",[t._v("TCP连接")]),t._v(" "),a("li",[t._v("处理请求")]),t._v(" "),a("li",[t._v("接收响应")]),t._v(" "),a("li",[t._v("渲染页面")])]),t._v(" "),a("h1",{attrs:{id:"udp和tcp的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#udp和tcp的区别"}},[t._v("#")]),t._v(" UDP和TCP的区别")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/2/23/1706fe0aa460d91c~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"项目中常用的性能优化方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目中常用的性能优化方式"}},[t._v("#")]),t._v(" 项目中常用的性能优化方式")]),t._v(" "),a("ol",[a("li",[t._v("减少和http请求")]),t._v(" "),a("li",[t._v("将css放文件头部，js文件放底部")]),t._v(" "),a("li",[t._v("用字体图标代替图片图标")]),t._v(" "),a("li",[t._v("善用缓存，不重复加载相同资源")]),t._v(" "),a("li",[t._v("减少重绘重排")])]),t._v(" "),a("h1",{attrs:{id:"计算属性和watch的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算属性和watch的区别"}},[t._v("#")]),t._v(" 计算属性和watch的区别")]),t._v(" "),a("ol",[a("li",[t._v("computed计算属性：依赖其他属性值，并且computed的值有缓存，只有它依赖的属性值发生改变，下一次获取computed的值时才会重新计算computed的值")]),t._v(" "),a("li",[t._v("watch监听器：无缓存性，类似于某些数据的监听回调，当监听的数据变化时便会执行回调进行后续操作")])]),t._v(" "),a("h1",{attrs:{id:"vue生命周期和每个钩子具体做了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue生命周期和每个钩子具体做了什么"}},[t._v("#")]),t._v(" vue生命周期和每个钩子具体做了什么")]),t._v(" "),a("h1",{attrs:{id:"组件间传值的几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件间传值的几种方式"}},[t._v("#")]),t._v(" 组件间传值的几种方式")]),t._v(" "),a("ol",[a("li",[t._v("父传子：子组件通过props['xx']来接收父组件传递的属性xx的值")]),t._v(" "),a("li",[t._v("子传父：子组件通过"),a("code",[t._v("this.$emit('fn',value)")]),t._v("来传递，父组件通过接收fn事件方法接收回调")]),t._v(" "),a("li",[t._v("使用Vuex")]),t._v(" "),a("li",[t._v("创建bus")])]),t._v(" "),a("h1",{attrs:{id:"父子组件生命周期顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子组件生命周期顺序"}},[t._v("#")]),t._v(" 父子组件生命周期顺序")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("加载渲染过程：")]),t._v(" "),a("p",[t._v("父beforeCreate -> 父created -> 父beforeMount -> 子beforeCreate -> 子created -> 子beforeMount -> 子mounted -> 父mounted")])]),t._v(" "),a("li",[a("p",[t._v("子组件更新过程：")]),t._v(" "),a("p",[t._v("父beforeUpdate -> 子beforeUpdate -> 子updated -> 父update")])]),t._v(" "),a("li",[a("p",[t._v("父组件更新过程：")]),t._v(" "),a("p",[t._v("父beforeUpdate -> 父update")])]),t._v(" "),a("li",[a("p",[t._v("销毁过程：")]),t._v(" "),a("p",[t._v("父beforeDestory -> 子beforeDestory -> 子destroyed -> 父destroyed")])])]),t._v(" "),a("h1",{attrs:{id:"eventbus具体怎么实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventbus具体怎么实现"}},[t._v("#")]),t._v(" "),a("code",[t._v("EventBus")]),t._v("具体怎么实现")]),t._v(" "),a("h1",{attrs:{id:"keepalive是什么-有哪些钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keepalive是什么-有哪些钩子"}},[t._v("#")]),t._v(" "),a("code",[t._v("keepalive")]),t._v("是什么，有哪些钩子")]),t._v(" "),a("p",[t._v("如果需要在组件切换的时候，保存一些组件的状态防止多次渲染，就可以用keepalive组件包裹需要保存的组件")]),t._v(" "),a("p",[t._v("两个重要属性，include 缓存组件名称，exclude 不需要缓存的组件名称。")]),t._v(" "),a("h1",{attrs:{id:"插槽是什么-怎么使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插槽是什么-怎么使用"}},[t._v("#")]),t._v(" 插槽是什么，怎么使用")]),t._v(" "),a("h1",{attrs:{id:"es6常见语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6常见语法"}},[t._v("#")]),t._v(" ES6常见语法")]),t._v(" "),a("h1",{attrs:{id:"自定义指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令"}},[t._v("#")]),t._v(" 自定义指令")]),t._v(" "),a("h1",{attrs:{id:"媒体查询是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#媒体查询是什么"}},[t._v("#")]),t._v(" 媒体查询是什么")]),t._v(" "),a("h1",{attrs:{id:"首屏性能优化怎么做"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首屏性能优化怎么做"}},[t._v("#")]),t._v(" 首屏性能优化怎么做")]),t._v(" "),a("h1",{attrs:{id:"浏览器的性能监控怎么做"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的性能监控怎么做"}},[t._v("#")]),t._v(" 浏览器的性能监控怎么做")]),t._v(" "),a("h1",{attrs:{id:"怎么解决白屏问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决白屏问题"}},[t._v("#")]),t._v(" 怎么解决白屏问题")]),t._v(" "),a("h1",{attrs:{id:"diff算法是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff算法是什么"}},[t._v("#")]),t._v(" Diff算法是什么")]),t._v(" "),a("h1",{attrs:{id:"常见检测数据类型的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见检测数据类型的方式"}},[t._v("#")]),t._v(" 常见检测数据类型的方式")]),t._v(" "),a("h1",{attrs:{id:"data为什么是一个函数而不是一个对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data为什么是一个函数而不是一个对象"}},[t._v("#")]),t._v(" data为什么是一个函数而不是一个对象")]),t._v(" "),a("p",[t._v("js中的对象是引用类型数据，当多个实例引用同一个对象时，只要一个实例对该对象进行操作，其他实例中的数据也会跟着改变。")]),t._v(" "),a("p",[t._v("在Vue中，更多的是要复用组件，因此每个组件都要有自己的数据，这样组件间才不会相互干扰。")]),t._v(" "),a("p",[t._v("所以组件的数据不能写成对象的形式，而是要写成函数的形式。数据以函数返回值形式定义，这样每次复用组件时就返回一个新的data")]),t._v(" "),a("h1",{attrs:{id:"如何把类数组转换为数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何把类数组转换为数组"}},[t._v("#")]),t._v(" 如何把类数组转换为数组")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过call调用数组的slice方法实现转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayLike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过call调用数组的splice方法实现转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayLike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过apply调用数组的concat方法实现转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arrayLike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Array.from实现")]),t._v("\nArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayLike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h1",{attrs:{id:"前端登录流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端登录流程"}},[t._v("#")]),t._v(" 前端登录流程")]),t._v(" "),a("p",[t._v("1.初次登录，前端调用后端的登录接口，发送用户名和密码，后端收到请求，验证用户名和密码")]),t._v(" "),a("p",[t._v("2.验证成功，返回前端一个token和一个用户信息的值")]),t._v(" "),a("p",[t._v("3.前端拿到token，将token存储到"),a("code",[t._v("Vuex")]),t._v("中，然后从"),a("code",[t._v("Vuex")]),t._v("中把token值存入浏览器的"),a("code",[t._v("cookies")]),t._v("中")]),t._v(" "),a("p",[t._v("4.把用户信息存到"),a("code",[t._v("Vuex")]),t._v("，然后再存储到"),a("code",[t._v("LocalStorage")]),t._v("中，然后跳转到下一个页面")]),t._v(" "),a("p",[t._v("5.根据后端接口的要求，只要不登陆就不能访问的页面需要在前端每次跳转页面时判断"),a("code",[t._v("cookies")]),t._v("中是否有token，没有就跳转到登录页，有就跳转相应页面")]),t._v(" "),a("p",[t._v("6.应该在每次发送请求的时候加上"),a("code",[t._v("token")])]),t._v(" "),a("p",[t._v("7.像是添加全局拦截器，将"),a("code",[t._v("token")]),t._v("值放入请求头中，后端判断请求头重是否有"),a("code",[t._v("token")]),t._v("，有就获取并验证"),a("code",[t._v("token")]),t._v("是否过期")]),t._v(" "),a("p",[t._v("8.如果过期就会返回无效的"),a("code",[t._v("token")]),t._v("然后跳回登录页并清除本地用户信息")]),t._v(" "),a("h1",{attrs:{id:"websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" websocket")]),t._v(" "),a("h1",{attrs:{id:"前端权限管理怎么实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端权限管理怎么实现"}},[t._v("#")]),t._v(" 前端权限管理怎么实现")]),t._v(" "),a("h1",{attrs:{id:"常见git操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见git操作"}},[t._v("#")]),t._v(" 常见git操作")])])}),[],!1,null,null,null);s.default=e.exports}}]);